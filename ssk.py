import discord
from config import settings
from discord.ui import Button, View
from discord.ext import commands
import asyncio
from discord import Option

intents = discord.Intents.all()
intents.message_content = True
intents.voice_states = True
intents.guild_messages = True
bot = commands.Bot(command_prefix='!',intents=intents)
ticket_category_name = 'Buyers'
active_timers = {} 

class HelpView(View):
    def __init__(self, callback):
        super().__init__()
        self.callback = callback

    @discord.ui.button(label='–ö—É–ø–∏—Ç—å Nitro', style=discord.ButtonStyle.green,)
    async def members_button(self, button: discord.ui.Button, interaction: discord.Interaction):
        await ticket(interaction)

@bot.command()
async def bhelp(ctx: discord.ApplicationContext):
    emb = discord.Embed(title='\u200b')
    emb.set_image(url="https://i.imgur.com/ggxP53y.png")
    emb2 = discord.Embed(title='‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ÄDiscord Nitro')
    emb2.description = "‚†Ä‚†Ä<a:f_:1021333160673431583>**Nitro Full‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä<a:basicclassic:1185156808185233458>Nitro Classic‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä<a:basicclassic:1185156808185233458>Nitro Basic**"
    emb2.add_field(name="<a:full:1184933699473657987>Nitro Full(1 –ú–µ—Å—è—Ü)", value="[**–¶–µ–Ω–∞: 250‚ÇΩ ~~350‚ÇΩ~~**](https://discord.com/channels/1020678578133807125/1163779229608071188)", inline=True)
    emb2.add_field(name="<a:classic:1171562237081681970>Nitro Classic(1 –ú–µ—Å—è—Ü)", value="[**–¶–µ–Ω–∞: 170‚ÇΩ ~~270‚ÇΩ~~**](https://discord.com/channels/1020678578133807125/1163779229608071188)", inline=True)
    emb2.add_field(name="<a:classic:1171562237081681970>Nitro Basic(1 –ú–µ—Å—è—Ü)", value="[**–¶–µ–Ω–∞: 100‚ÇΩ ~~240‚ÇΩ~~**](https://discord.com/channels/1020678578133807125/1163779229608071188)", inline=True)

    emb2.add_field(name="<a:full:1184933699473657987>Nitro Full(1 –ì–æ–¥)", value="[**–¶–µ–Ω–∞: 2500‚ÇΩ ~~3500‚ÇΩ~~**](https://discord.com/channels/1020678578133807125/1163779229608071188)", inline=True)
    emb2.add_field(name="<a:classic:1171562237081681970>Nitro Classic(1 –ì–æ–¥)", value="[**–¶–µ–Ω–∞: 1700‚ÇΩ ~~2700‚ÇΩ~~**](https://discord.com/channels/1020678578133807125/1163779229608071188)", inline=True)
    emb2.add_field(name="<a:classic:1171562237081681970>Nitro Basic(1 –ì–æ–¥)", value="[**–¶–µ–Ω–∞: 1000‚ÇΩ ~~2000‚ÇΩ~~**](https://discord.com/channels/1020678578133807125/1163779229608071188)", inline=True)
    view = HelpView(ctx.send)
    await ctx.send(embeds=[emb,emb2], view=view)

async def ticket(interaction: discord.Interaction):
    ticket_channel = await create_temporary_channel(interaction.user)
    await interaction.response.send_message(f'–î–ª—è –≤–∞—Å —Å–æ–∑–¥–∞–Ω –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Ç–∏–∫–µ—Ç: {ticket_channel.mention}', ephemeral=True)
    await send_close_ticket_message(ticket_channel, interaction)

async def create_temporary_channel(author):
    guild = author.guild
    category = discord.utils.get(guild.categories, name=ticket_category_name)

    if category is None:
        category = await guild.create_category(name=ticket_category_name)
    ticket_channel = await category.create_text_channel(name=f"ticket-{author.name}",
                                                       overwrites=await get_channel_overwrites(guild, author))

    return ticket_channel

async def get_channel_overwrites(guild, author):
    overwrites = {
        guild.default_role: discord.PermissionOverwrite(read_messages=False),
        guild.me: discord.PermissionOverwrite(read_messages=True),
        author: discord.PermissionOverwrite(read_messages=True)
    }
    return overwrites

async def send_close_ticket_message(channel,interaction):
    class CloseTicketView(View):
        async def move_channel(self, channel):
            closed_category = discord.utils.get(channel.guild.categories, name='Closed Tickets')
            if closed_category is None:
                closed_category = await channel.guild.create_category(name='Closed Tickets')
                
            overwrites = {
                channel.guild.default_role: discord.PermissionOverwrite(view_channel=False),
                channel.guild.me: discord.PermissionOverwrite(view_channel=False)
                }

            await channel.edit(category=closed_category, overwrites=overwrites)

        @discord.ui.button(label='–ó–∞–∫—Ä—ã—Ç—å —Ç–∏–∫–µ—Ç', style=discord.ButtonStyle.danger, emoji='üîí')
        async def close_ticket(self, button: discord.ui.Button, interaction: discord.Interaction):
            try:
                await self.move_channel(channel)
                await interaction.response.send_message("–¢–∏–∫–µ—Ç –ó–∞–∫—Ä—ã—Ç.")
            except Exception as e:
                print(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ —Ç–∏–∫–µ—Ç–∞: {e}')

        @discord.ui.button(label='–û–ø–ª–∞—Ç–∏—Ç—å —Ç–æ–≤–∞—Ä', style=discord.ButtonStyle.green)
        async def confirm(self, button: discord.ui.Button, interaction: discord.Interaction):
            try:
                last_message = await channel.fetch_message(channel.last_message_id)

                if last_message.attachments:
                    file_name = last_message.attachments[0].filename
                    if file_name.lower().endswith(('png', 'jpeg', 'jpg', 'gif')):
                        await interaction.response.send_message("<@350970672769662976> \n–í–∞–º –æ—Ç–ø—Ä–∞–≤—è—Ç —Ñ–æ—Ç–∫—É QR CODE, –í–∞–º –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç —Å —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ, –ò —Ä–∞–∑—Ä–µ—à–∏—Ç—å –≤—Ö–æ–¥ –≤ –∞–∫–∫–∞—É–Ω—Ç –ø—Ä–æ–¥–∞–≤—Ü—É.\n–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –æ—Å—Ç–∞–Ω–µ—Ç—å—Å—è –æ–∂–∏–¥–∞—Ç—å –ø–∞—Ä—É –º–∏–Ω—É—Ç")
                    else:
                        await interaction.response.send_message("–ü–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —á–µ–∫–æ–º –æ–ø–ª–∞—Ç—ã", ephemeral=True)
                else:
                    await interaction.response.send_message("–ü–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —á–µ–∫–æ–º –æ–ø–ª–∞—Ç—ã", ephemeral=True)
            except Exception as e:
                print(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è "–û–ø–ª–∞—Ç–∏–ª": {e}')
                
    embed = discord.Embed(title='–°–ø–æ—Å–æ–±—ã –û–ø–ª–∞—Ç—ã', description='\n<:usdt:1185162792874024990> USDT - –û–±–≥–æ–≤–∞—Ä–∏–≤–∞–µ—Ç—Å—è —Å @en0ken  \n\n<:sb:1021362818211123200> –°–±–µ—Ä–±–∞–Ω–∫ - 2202202382042251 –ï–≥–æ—Ä –ê.–ú  \n\n<:tink:1185162482701054012> –¢–∏–Ω—å–∫–æ—Ñ - 2200700950019496 –ú–∏—Ö–∞–∏–ª –î.  \n\n**–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –ø—Ä–∏—Å—ã–ª–∞–π—Ç–µ —á–µ–∫ –∏ –Ω–∞–∂–∏–º–∞–π—Ç–µ –Ω–∞ –∑–µ–ª–µ–Ω—É—é –∫–Ω–æ–ø–∫—É.**')
    second_message_content = f"<@{interaction.user.id}>, –ü—Ä–∏–≤–µ—Ç, —è SSK, —Ç–≤–æ–π –ø–µ—Ä–æ—Å–Ω–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –≤ –≤—ã–±–æ—Ä–µ –∏ –ø–æ–∫—É–ø–∫–µ Nitro, –¥–∞–≤–∞–π –Ω–∞—á–Ω–µ–º —Å —Ç–æ–≥–æ –∫–∞–∫–æ–µ —Ç—ã Nitro —Ö–æ—á–µ—à—å –Ω–∞ –≤—ã–±–æ—Ä –µ—Å—Ç—å \n1) Nitro Full(1 –ú–µ—Å—è—Ü) \n2) Nitro Classic(1 –ú–µ—Å—è—Ü) \n3) Nitro Basic(1 –ú–µ—Å—è—Ü) \n4) Nitro Full(1 –ì–æ–¥) \n5) Nitro Classic(1 –ì–æ–¥) \n6) Nitro Basic(1 –ì–æ–¥) \n **–í—ã–±–µ—Ä–∏ –Ω–æ–º–µ—Ä –∏ –Ω–∞–ø–∏—à–∏ –µ–≥–æ –≤ —á–∞—Ç!**"
    second_message = await channel.send(second_message_content)
    view = CloseTicketView()
    message = await channel.send(embed = embed, view=view)
    return second_message,message

@bot.event
async def on_message(message):
    if message.author.bot:
        return 

    content = message.content.lower()

    if "1" in content:
        response = "–í—ã –≤—ã–±—Ä–∞–ª–∏ Nitro Full(1 –º–µ—Å—è—Ü) - –µ–≥–æ —Ü–µ–Ω–∞ 200—Ä \n–ú–æ–∂–µ—Ç–µ –ø—Ä–æ–≤–æ–¥–∏—Ç—å –æ–ø–ª–∞—Ç—É, –ø–æ—Å–ª–µ —á–µ–≥–æ –∫–∏–¥–∞–π—Ç–µ —á–µ–∫ –≤ –∫–∞–Ω–∞–ª –∏ –Ω–∞–∂–∏–º–∞–π—Ç–µ –Ω–∞ –∑–µ–ª–µ–Ω—É—é –∫–Ω–æ–ø–∫—É –≤ 1 —Å–æ–æ–±—â–µ–Ω–∏–∏"
    elif "2" in content:
        response = "–í—ã –≤—ã–±—Ä–∞–ª–∏ Nitro Classic(1 –º–µ—Å—è—Ü) - –µ–≥–æ —Ü–µ–Ω–∞ 200—Ä \n–ú–æ–∂–µ—Ç–µ –ø—Ä–æ–≤–æ–¥–∏—Ç—å –æ–ø–ª–∞—Ç—É, –ø–æ—Å–ª–µ —á–µ–≥–æ –∫–∏–¥–∞–π—Ç–µ —á–µ–∫ –≤ –∫–∞–Ω–∞–ª –∏ –Ω–∞–∂–∏–º–∞–π—Ç–µ –Ω–∞ –∑–µ–ª–µ–Ω—É—é –∫–Ω–æ–ø–∫—É –≤ 1 —Å–æ–æ–±—â–µ–Ω–∏–∏"
    elif "3" in content:
        response = "–í—ã –≤—ã–±—Ä–∞–ª–∏ Nitro Basic(1 –º–µ—Å—è—Ü) - –µ–≥–æ —Ü–µ–Ω–∞ 200—Ä \n–ú–æ–∂–µ—Ç–µ –ø—Ä–æ–≤–æ–¥–∏—Ç—å –æ–ø–ª–∞—Ç—É, –ø–æ—Å–ª–µ —á–µ–≥–æ –∫–∏–¥–∞–π—Ç–µ —á–µ–∫ –≤ –∫–∞–Ω–∞–ª –∏ –Ω–∞–∂–∏–º–∞–π—Ç–µ –Ω–∞ –∑–µ–ª–µ–Ω—É—é –∫–Ω–æ–ø–∫—É –≤ 1 —Å–æ–æ–±—â–µ–Ω–∏–∏"
    elif "4"  in content:
        response = "–í—ã –≤—ã–±—Ä–∞–ª–∏ Nitro Full(1 –≥–æ–¥) - –µ–≥–æ —Ü–µ–Ω–∞ 2000—Ä \n–ú–æ–∂–µ—Ç–µ –ø—Ä–æ–≤–æ–¥–∏—Ç—å –æ–ø–ª–∞—Ç—É, –ø–æ—Å–ª–µ —á–µ–≥–æ –∫–∏–¥–∞–π—Ç–µ —á–µ–∫ –≤ –∫–∞–Ω–∞–ª –∏ –Ω–∞–∂–∏–º–∞–π—Ç–µ –Ω–∞ –∑–µ–ª–µ–Ω—É—é –∫–Ω–æ–ø–∫—É –≤ 1 —Å–æ–æ–±—â–µ–Ω–∏–∏"
    elif "5" in content:
        response = "–í—ã –≤—ã–±—Ä–∞–ª–∏ Nitro Classic(1 –≥–æ–¥) - –µ–≥–æ —Ü–µ–Ω–∞ 2000—Ä \n–ú–æ–∂–µ—Ç–µ –ø—Ä–æ–≤–æ–¥–∏—Ç—å –æ–ø–ª–∞—Ç—É, –ø–æ—Å–ª–µ —á–µ–≥–æ –∫–∏–¥–∞–π—Ç–µ —á–µ–∫ –≤ –∫–∞–Ω–∞–ª –∏ –Ω–∞–∂–∏–º–∞–π—Ç–µ –Ω–∞ –∑–µ–ª–µ–Ω—É—é –∫–Ω–æ–ø–∫—É –≤ 1 —Å–æ–æ–±—â–µ–Ω–∏–∏"
    elif "6" in content:
        response = "–í—ã –≤—ã–±—Ä–∞–ª–∏ Nitro Basic(1 –≥–æ–¥) - –µ–≥–æ —Ü–µ–Ω–∞ 2000—Ä \n–ú–æ–∂–µ—Ç–µ –ø—Ä–æ–≤–æ–¥–∏—Ç—å –æ–ø–ª–∞—Ç—É, –ø–æ—Å–ª–µ —á–µ–≥–æ –∫–∏–¥–∞–π—Ç–µ —á–µ–∫ –≤ –∫–∞–Ω–∞–ª –∏ –Ω–∞–∂–∏–º–∞–π—Ç–µ –Ω–∞ –∑–µ–ª–µ–Ω—É—é –∫–Ω–æ–ø–∫—É –≤ 1 —Å–æ–æ–±—â–µ–Ω–∏–∏"
    else:
        response = None 
    if response:
        await message.channel.send(response)

    await bot.process_commands(message)

target_channel_id = 1173239464588476507  

@bot.slash_command(id_server = [settings['id_server']])
async def timerstart(ctx: discord.ApplicationContext, user: discord.User, duration: Option(str, name='–ø–µ—Ä–∏–æ–¥', description='–ú–µ—Å—è—Ü/–ì–æ–¥', required=True)):
    duration = duration.lower()
    
    if duration not in ['–º–µ—Å—è—Ü', '–≥–æ–¥']:
        await ctx.send("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ '–º–µ—Å—è—Ü' –∏–ª–∏ '–≥–æ–¥'.")
        return

    if duration == '–º–µ—Å—è—Ü':
        time_seconds = 30 * 24 * 60 * 60 
    else: 
        time_seconds = 365 * 24 * 60 * 60  

    active_timers[user.id] = time_seconds
    await ctx.send(f"–¢–∞–π–º–µ—Ä –Ω–∞ {duration} –¥–ª—è {user.mention} –∑–∞–ø—É—â–µ–Ω.")

    await asyncio.sleep(time_seconds)  
    del active_timers[user.id]

    target_channel = bot.get_channel(target_channel_id)
    await target_channel.send(f"{user.mention}, —É –≤–∞—Å –∫–æ–Ω—á–∏–ª–æ—Å—å –Ω–∏—Ç—Ä–æ. –î–∞–≤–∞–π—Ç–µ –æ—Ñ–æ—Ä–º–∏–º –Ω–æ–≤–æ–µ!")


@bot.event
async def on_ready():
    print(f'Logged in as {bot.user.name}')

bot.run(settings['token'])
